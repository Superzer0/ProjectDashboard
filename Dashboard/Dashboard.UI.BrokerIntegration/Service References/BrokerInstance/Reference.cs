//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dashboard.UI.BrokerIntegration.BrokerInstance {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokerInformation", Namespace="http://schemas.datacontract.org/2004/07/Dashboard.Broker.Objects.DataObjects.Data" +
        "Contracts")]
    [System.SerializableAttribute()]
    public partial class BrokerInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecutionPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PluginsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan UptimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionPath {
            get {
                return this.ExecutionPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionPathField, value) != true)) {
                    this.ExecutionPathField = value;
                    this.RaisePropertyChanged("ExecutionPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PluginsCount {
            get {
                return this.PluginsCountField;
            }
            set {
                if ((this.PluginsCountField.Equals(value) != true)) {
                    this.PluginsCountField = value;
                    this.RaisePropertyChanged("PluginsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemInfo {
            get {
                return this.SystemInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemInfoField, value) != true)) {
                    this.SystemInfoField = value;
                    this.RaisePropertyChanged("SystemInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Uptime {
            get {
                return this.UptimeField;
            }
            set {
                if ((this.UptimeField.Equals(value) != true)) {
                    this.UptimeField = value;
                    this.RaisePropertyChanged("Uptime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BrokerInstance.IManageBrokerService")]
    public interface IManageBrokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageBrokerService/GetBrokerInformation", ReplyAction="http://tempuri.org/IManageBrokerService/GetBrokerInformationResponse")]
        Dashboard.UI.BrokerIntegration.BrokerInstance.BrokerInformation GetBrokerInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageBrokerService/GetBrokerInformation", ReplyAction="http://tempuri.org/IManageBrokerService/GetBrokerInformationResponse")]
        System.Threading.Tasks.Task<Dashboard.UI.BrokerIntegration.BrokerInstance.BrokerInformation> GetBrokerInformationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManageBrokerServiceChannel : Dashboard.UI.BrokerIntegration.BrokerInstance.IManageBrokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageBrokerServiceClient : System.ServiceModel.ClientBase<Dashboard.UI.BrokerIntegration.BrokerInstance.IManageBrokerService>, Dashboard.UI.BrokerIntegration.BrokerInstance.IManageBrokerService {
        
        public ManageBrokerServiceClient() {
        }
        
        public ManageBrokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManageBrokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageBrokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageBrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Dashboard.UI.BrokerIntegration.BrokerInstance.BrokerInformation GetBrokerInformation() {
            return base.Channel.GetBrokerInformation();
        }
        
        public System.Threading.Tasks.Task<Dashboard.UI.BrokerIntegration.BrokerInstance.BrokerInformation> GetBrokerInformationAsync() {
            return base.Channel.GetBrokerInformationAsync();
        }
    }
}
